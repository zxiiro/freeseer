#!/usr/bin/env python
# -*- coding: utf-8 -*-

# freeseer - vga/presentation capture software
#
#  Copyright (C) 2011, 2013  Free and Open Source Software Learning Centre
#  http://fosslc.org
#
#  This program is free software: you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation, either version 3 of the License, or
#  (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program.  If not, see <http://www.gnu.org/licenses/>.

# For support, questions, suggestions or any other inquiries, visit:
# http://wiki.github.com/Freeseer/freeseer/


import sys

if len(sys.argv) > 1:
    '''If arguments are passed, act as a commandline'''
    import argparse
    from freeseer.settings import configdir
    from freeseer.framework.util import reset
    from freeseer.framework.util import reset_configuration
    from freeseer.framework.util import reset_database

    parser = argparse.ArgumentParser(description='Freeseer Configuration Utility')
    parser.add_argument("--reset", help="Reset's Freeseer (removes the Freeseer configuration directory)",
        action="store_true")
    parser.add_argument("--reset-configuration", help="Reset's Freeseer configuration (removes freeseer.conf and plugins.conf)", action="store_true")
    parser.add_argument("--reset-database", help="Reset's Freeseer database (removes presentations.db)", action="store_true")
    args = parser.parse_args()

    if args.reset:
        reset(configdir)
    elif args.reset_configuration:
        reset_configuration(configdir)
    elif args.reset_database:
        reset_database(configdir)

else:
    '''Launch Freeseer Configuration GUI if no arguments are passed'''
    import signal
    from PyQt4 import QtGui
    from freeseer import settings
    from freeseer.frontend.configtool.configtool import ConfigToolApp

    signal.signal(signal.SIGINT, signal.SIG_DFL)
    app = QtGui.QApplication(sys.argv)

    # Setup Config Stuff
    profile = settings.profile_manager.get()
    config = profile.get_config('freeseer.conf', settings.FreeseerConfig,
                                storage_args=['Global'], read_only=False)

    main = ConfigToolApp(profile, config)
    main.show()
    sys.exit(app.exec_())
